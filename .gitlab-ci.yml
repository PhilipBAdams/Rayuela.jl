variables:
  CI_IMAGE_TAG: 'cuda'

stages:
  - test
  - postprocess

include:
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/common.yml'
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/test_v0.7.yml'
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/test_v1.0.yml'
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/test_dev.yml'
# - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/postprocess_documentation.yml'
# - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v0/postprocess_coverage.yml'

test:dev:
  allow_failure: true

# === Borrowing from CUDANative.jl ===
# Documenter.jl's `deploydocs` really is only made to work with Travis,
# so we need to fake quite a bit of environment in order for it to work.
# TODO: create an unconditional `deploydocs`, and pick when to deploy in here.
documentation:
  stage: postprocess
  image: juliagpu/julia:v1.0-cuda
  variables:
    DOCUMENTER_DEBUG: "true"
    TRAVIS_REPO_SLUG: "github.com/JuliaGPU/CUDAnative.jl.git"
    TRAVIS_BRANCH: $CI_COMMIT_REF_NAME
    TRAVIS_TAG: $CI_COMMIT_TAG
  dependencies:
    - test:v1.0
  script:
    # gitlab-ce#15280
    - apt update && apt install -y jq
    - export PR_ID=$(curl -s "http://gitlab.ca/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened" | jq -r ".[]|select(.sha == \"$CI_COMMIT_SHA\")|.iid")
    - export TRAVIS_PULL_REQUEST=$(if [ "$PR_ID" == "" ]; then echo "false"; else echo "true"; fi)

    - apt install -y openssh-client && mkdir /root/.ssh
    - julia --project -e 'using Pkg;
                          Pkg.add("Documenter")'
    - julia --project -e 'using Pkg;
                          Pkg.add(PackageSpec(url="https://github.com/una-dinosauria/Rayuela.jl.git", rev="master"))'
    - julia --project docs/make.jl
